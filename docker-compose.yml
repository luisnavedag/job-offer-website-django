version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: bash -c "
      gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 2 --reload
      && python manage.py runserver 0.0.0.0:8000
      "
    volumes:
      - .:/webapp
      - static:/webapp/static
      - media:/webapp/media
    expose:
      - 8000
    depends_on:
      - redis
      - db

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery --app=config worker --loglevel=info
    volumes:
      - .:/webapp
    environment:
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - web

  redis:
    image: redis:7-alpine

  dashboard:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery flower -A config --port=5555 --broker=redis://redis:6379/0
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - celery

  db:
    image: postgres:15.1-bullseye
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=database1_role
      - POSTGRES_PASSWORD=database1_password
      - POSTGRES_DB=database1

  nginx:
    build: ./nginx
    ports:
      - "8000:80"
    volumes:
      - static:/webapp/static
      - media:/webapp/media
    depends_on:
      - web

volumes:
  postgres_data:
  static:
  media: